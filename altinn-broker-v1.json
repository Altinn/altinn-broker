{
    "openapi": "3.0.1",
    "info": {
      "title": "Altinn3.Broker",
      "version": "1.0.0",
      "description": "API for Altinn Broker functionality.",
      "x-comment-Erik-2023-10-29-23:10": "Started adding comments in this json file, to document change proposals and support discussion on the API",
      "x-comment-Erik-2023-10-29-23:11": "Added summary, description and operationId to all endpoints (best practice and also used in Altinn 2 Broker API)",
      "x-comment-Erik-2023-10-29-23:20": "Forgot to add examples for all endpoints (best practice and also used in Altinn 2 Broker API)",
      "x-comment-Erik-2023-10-29-23:59": "Added version specification for all endpoints"  
    },
    "paths": {
      "/broker/api/v1/file": {
        "post": {
          "tags": ["File"],
          "summary": "Initialize a new file.",
          "description": "This endpoint initializes a new file for processing.",
          "operationId": "InitializeFile",
          "requestBody": {
            "description": "File initialization details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInitalizeExt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInitalizeExt"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInitalizeExt"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully initialized the file.",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": ["File"],
          "summary": "Retrieve file status.",
          "description": "This endpoint retrieves the status of a specified file.",
          "operationId": "GetFileStatus",
          "parameters": [
            {
              "name": "fileId",
              "in": "query",
              "style": "form",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved the file status.",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/FileStatusOverviewExt"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FileStatusOverviewExt"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FileStatusOverviewExt"
                  }
                }
              }
            }
          }
        }
      },
      "/broker/api/v1/file/{fileId}/upload": {
        "post": {
          "tags": ["File"],
          "summary": "Upload a file.",
          "description": "This endpoint allows for the uploading of a specified file.",
          "operationId": "UploadFile",
          "parameters": [
            {
              "name": "fileId",
              "in": "path",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully uploaded the file."
            }
          }
        }
      },
      "/broker/api/v1/file/upload": {
        "post": {
            "tags": [
                "File"
            ],
            "requestBody": {
                "content": {
                    "multipart/form-data": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Metadata.FileName": {
                                    "type": "string"
                                },
                                "Metadata.SendersFileReference": {
                                    "type": "string"
                                },
                                "Metadata.Checksum": {
                                    "type": "string"
                                },
                                "Metadata.BrokerResourceId": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "Metadata.Sender": {
                                    "type": "string"
                                },
                                "Metadata.Recipients": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "Metadata.Metadata": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                },
                                "File": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        },
                        "encoding": {
                            "Metadata.FileName": {
                                "style": "form"
                            },
                            "Metadata.SendersFileReference": {
                                "style": "form"
                            },
                            "Metadata.Checksum": {
                                "style": "form"
                            },
                            "Metadata.BrokerResourceId": {
                                "style": "form"
                            },
                            "Metadata.Sender": {
                                "style": "form"
                            },
                            "Metadata.Recipients": {
                                "style": "form"
                            },
                            "Metadata.Metadata": {
                                "style": "form"
                            },
                            "File": {
                                "style": "form"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Success"
                }
            }
        }
    },
    "/broker/api/v1/file/{fileId}/download": {
      "get": {
        "tags": ["File"],
        "summary": "Download a file.",
        "description": "This endpoint allows for the downloading of a specified file.",
        "operationId": "DownloadFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully downloaded the file.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              }
            }
          }
        }
      }
    },
    "/broker/api/v1/file/{fileId}/confirmdownload": {
      "post": {
        "tags": ["File"],
        "summary": "Confirm a file download.",
        "description": "This endpoint confirms the successful download of a specified file.",
        "operationId": "ConfirmDownload",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully confirmed the file download."
          }
        }
      }
    },
    "/broker/api/v1/file/{fileId}": {
      "get": {
          "tags": [
              "File"
          ],
          "parameters": [
              {
                  "name": "fileId",
                  "in": "path",
                  "required": true,
                  "style": "simple",
                  "schema": {
                      "type": "string",
                      "format": "uuid"
                  }
              }
          ],
          "responses": {
              "200": {
                  "description": "Success",
                  "content": {
                      "text/plain": {
                          "schema": {
                              "$ref": "#/components/schemas/FileStatusOverviewExt"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/FileStatusOverviewExt"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/FileStatusOverviewExt"
                          }
                      }
                  }
              }
          }
      }
    },
    "/broker/api/v1/file/{fileId}/details": {
        "get": {
            "tags": [
                "File"
            ],
            "parameters": [
                {
                    "name": "fileId",
                    "in": "path",
                    "required": true,
                    "style": "simple",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Success",
                    "content": {
                        "text/plain": {
                            "schema": {
                                "$ref": "#/components/schemas/FileStatusDetailsExt"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileStatusDetailsExt"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileStatusDetailsExt"
                            }
                        }
                    }
                }
            }
        }
    },
      "/health": {
        "get": {
          "tags": ["Health"],
          "summary": "Check the health of the service.",
          "description": "This endpoint checks the health status of the service.",
          "operationId": "CheckHealth",
          "responses": {
            "200": {
              "description": "Service is healthy."
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "UploadProtocolType": {
          "x-comment-Erik-2023-10-26-22:00": "Added this schema to support multiple upload protocols (assume default https)",
          "type": "string",
          "description": "Protocol for uploading the file, e.g. https, tus, etc.",
          "enum": ["https", "tus", "ftp", "sftp"],
          "default": "https",
          "nullable": true
        },
        "FilenameType": {
          "x-comment-Erik-2023-10-26-22:36": "Added this schema to support filename verification",
          "type":"string",
          "minLength":1,
          "maxLength":255,
          "pattern":"^[a-zA-Z0-9._-]+$",
          "nullable":false,
          "description":"Name of the file. Must be alphanumeric and can include hyphens, underscores, and periods."
        },
        "FileInitalizeExt": {
          "x-comment-Erik-2023-10-26-21:37": "Added (optional) property correlationId, to support correlation between files, e.g. within a case", 
          "x-comment-Erik-2023-10-26-21:40": "Added (optional) property uploadProtocol, to support multiple upload protocols (assume default https", 
          "x-comment-Erik-2023-10-26-21:45": "Consider setting nullable to false for most of the properties",
          "type": "object",
          "description": "Schema for initializing a new file with relevant metadata.",
          "properties": {
            "correlationId": {
              "type": "string",
              "description": "Correlation ID for the file, e.g. as part of a case",
              "format": "uuid",
              "nullable": true
            },
            "uploadProtocol": {
            "$ref": "#/components/schemas/UploadProtocolType"
            },
              "filename": {
                  "x-comment-Erik-2023-10-26-22:41": "Reference to FilenameType schema",
                  "$ref": "#/components/schemas/FilenameType"
              },
              "sendersFileReference": {
                  "type": "string",
                  "description": "A unique reference ID provided by the sender.",
                  "nullable": true
              },
              "checksum": {
                  "type": "string",
                  "description": "Checksum value for verifying the file's integrity.",
                  "nullable": true
              },
              "sender": {
                  "type": "string",
                  "description": "The entity or individual sending the file.",
                  "nullable": true
              },
              "recipients": {
                  "type": "array",
                  "description": "List of intended recipients for the file.",
                  "items": {
                      "type": "string"
                  },
                  "nullable": true
              },
              "metadata": {
                  "type": "object",
                  "description": "Additional metadata associated with the file.",
                  "additionalProperties": {
                      "type": "string"
                  },
                  "nullable": true
              }
          },
          "additionalProperties": false
        },
        "FileStatusOverviewExt": {
          "type": "object",
          "description": "Overview of the file's current status and associated metadata.",
          "properties": {
            "fileId": {
              "type": "string",
              "description": "Unique identifier for the file.",
              "format": "uuid"
            },
            "fileName": {
              "type": "string",
              "description": "The name of the file.",
              "nullable": true
            },
            "sendersFileReference": {
              "type": "string",
              "description": "Reference ID provided by the sender.",
              "nullable": true
            },
            "checksum": {
              "type": "string",
              "description": "Checksum for verifying file integrity.",
              "nullable": true
            },
            "fileStatus": {
              "$ref": "#/components/schemas/FileStatusExt"
            },
            "fileStatusText": {
              "type": "string",
              "description": "Human-readable description of the file's status.",
              "nullable": true
            },
            "fileStatusChanged": {
              "type": "string",
              "description": "Timestamp indicating the last change in file status.",
              "format": "date-time"
            },
                "sender": {
                    "type": "string",
                    "description": "Entity or individual sending the file.",
                    "nullable": true
                },
                "recipients": {
                    "type": "array",
                    "description": "List of recipients for the file.",
                    "items": {
                        "$ref": "#/components/schemas/RecipientFileStatusEventExt"
                    },
                    "nullable": true
                },
                "metadata": {
                    "type": "object",
                    "description": "Metadata associated with the file.",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "nullable": true
                }
            },
            "additionalProperties": false
        },
        "FileStatusDetailsExt": {
            "type": "object",
            "properties": {
                "fileId": {
                    "type": "string",
                    "format": "uuid"
                },
                "fileName": {
                    "type": "string",
                    "nullable": true
                },
                "sendersFileReference": {
                    "type": "string",
                    "nullable": true
                },
                "checksum": {
                    "type": "string",
                    "nullable": true
                },
                "fileStatus": {
                    "$ref": "#/components/schemas/FileStatusExt"
                },
                "fileStatusText": {
                    "type": "string",
                    "nullable": true
                },
                "fileStatusChanged": {
                    "type": "string",
                    "format": "date-time"
                },
                "sender": {
                    "type": "string",
                    "nullable": true
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/RecipientFileStatusEventExt"
                    },
                    "nullable": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "nullable": true
                },
                "fileStatusHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/FileStatusEventExt"
                    },
                    "nullable": true
                },
                "recipientFileStatusHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/RecipientFileStatusEventExt"
                    },
                    "nullable": true
                }
            },
            "additionalProperties": false
        },
        "FileStatusEventExt": {
            "type": "object",
            "properties": {
                "fileStatus": {
                    "$ref": "#/components/schemas/FileStatusExt"
                },
                "fileStatusText": {
                    "type": "string",
                    "nullable": true
                },
                "fileStatusChanged": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "additionalProperties": false
        },
        "FileStatusExt": {
            "enum": [
                "Initialized",
                "UploadInProgress",
                "AwaitingUploadProcessing",
                "UploadedAndProcessed",
                "Published",
                "Cancelled",
                "AllConfirmedDownloaded",
                "Deleted",
                "Failed"
            ],
            "type": "string"
        },
        "RecipientFileStatusEventExt": {
            "type": "object",
            "properties": {
                "recipient": {
                    "type": "string",
                    "nullable": true
                },
                "recipientFileStatusCode": {
                    "$ref": "#/components/schemas/RecipientFileStatusExt"
                },
                "recipientFileStatusText": {
                    "type": "string",
                    "nullable": true
                },
                "recipientFileStatusChanged": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "additionalProperties": false
        },
        "RecipientFileStatusExt": {
            "enum": [
                "Initialized",
                "Published",
                "Downloaded",
                "ConfirmDownloaded",
                "Cancelled"
            ],
            "type": "string"
        },
        "Stream": {
          "type": "object",
          "description": "Properties defining the characteristics and capabilities of a file stream.",
          "properties": {
            "canRead": {
              "type": "boolean",
              "description": "Indicates if the stream supports reading.",
              "readOnly": true
            },
            "canWrite": {
              "type": "boolean",
              "description": "Indicates if the stream supports writing.",
              "readOnly": true
            },
            "canSeek": {
              "type": "boolean",
              "description": "Indicates if the stream supports seeking to a specific position.",
              "readOnly": true
            },
            "canTimeout": {
              "type": "boolean",
              "description": "Indicates if the stream has a timeout feature.",
              "readOnly": true
            },
            "length": {
              "type": "integer",
              "description": "The total length of the stream in bytes.",
              "format": "int64",
              "readOnly": true
            },
            "position": {
              "type": "integer",
              "description": "The current position of the stream in bytes.",
              "format": "int64"
            },
            "readTimeout": {
              "type": "integer",
              "description": "The timeout duration for reading from the stream.",
              "format": "int32"
            },
            "writeTimeout": {
              "type": "integer",
              "description": "The timeout duration for writing to the stream.",
              "format": "int32"
            }
          },
          "additionalProperties": false
        }
      }
    }
  }
  