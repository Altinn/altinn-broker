name: Deploy infrastructure

env:
  AZ_CLI_VERSION: 2.56.0

on:
  workflow_call:
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_OBJECT_ID:
        required: true
      AZURE_TEST_ACCESS_CLIENT_ID:
        required: false
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_SOURCE_KEY_VAULT_NAME:
        required: true
      AZURE_NAME_PREFIX:
        required: true
      AZURE_MIGRATION_STORAGE_ACCOUNT_NAME:
       required: true
      AZURE_CLIENT_SECRET:
       required: true
      MASKINPORTEN_JWK:
       required: true
      MASKINPORTEN_CLIENT_ID:
       required: true
      PLATFORM_SUBSCRIPTION_KEY:
       required: true

    inputs:
      region:
        required: true
        type: string
      environment:
        required: true
        type: string
      version:
        description: "Current version to use as tag"
        required: true
        type: string
      ref:
        description: "The branch or tag ref to deploy. Using default checkout ref if not provided."
        required: false
        default: ${{ github.ref }}
        type: string

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: OIDC Login to Azure Public Cloud
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
      - name: Generate postgresql password
        id: pwd-generator
        shell: pwsh
        run: |
          Import-module "./.github/tools/pwdGenerator.ps1" -Force
          $password = (GeneratePassword -length 30).Password
          echo "::add-mask::$password"
          echo "::set-output name=postgresqlPassword::$password"
  
      - name: Deploy infrastructure (${{ inputs.environment }})
        uses: azure/arm-deploy@v1
        id: deploy
        env:
          ENVIRONMENT: ${{ inputs.environment }}
          BROKER_PG_ADMIN_PASSWORD: ${{ steps.pwd-generator.outputs.postgresqlPassword }}
          AZURE_NAME_PREFIX: ${{ secrets.AZURE_NAME_PREFIX }}
          SOURCE_KEY_VAULT_NAME: ${{ secrets.AZURE_SOURCE_KEY_VAULT_NAME }}
          CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          OBJECT_ID: ${{ secrets.AZURE_OBJECT_ID }}
          TEST_CLIENT_ID: ${{ secrets.AZURE_TEST_ACCESS_CLIENT_ID }}
          NAME_PREFIX: ${{ secrets.AZURE_NAME_PREFIX }}
          KEY_VAULT_NAME: ${{ secrets.AZURE_SOURCE_KEY_VAULT_NAME }}
          MIGRATION_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_MIGRATION_STORAGE_ACCOUNT_NAME }}
          CLIENT_SECRET: ${{ SECRETS.AZURE_CLIENT_SECRET }}
          MASKINPORTEN_JWK: ${{ SECRETS.MASKINPORTEN_JWK }}
          MASKINPORTEN_CLIENT_ID: ${{ SECRETS.MASKINPORTEN_CLIENT_ID }}
          PLATFORM_SUBSCRIPTION_KEY: ${{ SECRETS.PLATFORM_SUBSCRIPTION_KEY }}
        with:
          scope: subscription
          template: ./.azure/infrastructure/main.bicep
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          deploymentMode: Incremental
          deploymentName: ${{ secrets.AZURE_NAME_PREFIX }}-${{ inputs.version }}
          region: ${{ inputs.region }}
          resourceGroupName: ${{ secrets.AZURE_NAME_PREFIX }}-rg
          failOnStdErr: false
          parameters: ./.azure/infrastructure/params.bicepparam

      - name: Logout from azure
        if: ${{failure() || success()}}
        continue-on-error: true
        run: az logout
