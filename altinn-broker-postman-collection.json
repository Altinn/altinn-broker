{
	"info": {
		"_postman_id": "60226fe4-00b7-4893-9f69-d3a91ea6e8a8",
		"name": "Altinn.Broker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7106668"
	},
	"item": [
		{
			"name": "Broker",
			"item": [
				{
					"name": "{fileTransferId}",
					"item": [
						{
							"name": "Overview",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{sender_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/broker/api/v1/filetransfer/{{fileTransferId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"broker",
										"api",
										"v1",
										"filetransfer",
										"{{fileTransferId}}"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/broker/api/v1/filetransfer/:fileTransferId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"broker",
												"api",
												"v1",
												"filetransfer",
												":fileTransferId"
											],
											"variable": [
												{
													"key": "fileTransferId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"fileTransferId\": \"<uuid>\",\n  \"FileName\": \"<string>\",\n  \"sendersFileTransferReference\": \"<string>\",\n  \"checksum\": \"<string>\",\n  \"fileStatus\": \"Failed\",\n  \"fileStatusText\": \"<string>\",\n  \"fileStatusChanged\": \"<dateTime>\",\n  \"brokerResourceId\": \"<uuid>\",\n  \"sender\": \"<string>\",\n  \"recipients\": [\n    {\n      \"recipient\": \"<string>\",\n      \"recipientFileTransferStatusCode\": \"Initialized\",\n      \"recipientFileTransferStatusText\": \"<string>\",\n      \"recipientFileTransferStatusChanged\": \"<dateTime>\"\n    },\n    {\n      \"recipient\": \"<string>\",\n      \"recipientFileTransferStatusCode\": \"Cancelled\",\n      \"recipientFileTransferStatusText\": \"<string>\",\n      \"recipientFileTransferStatusChanged\": \"<dateTime>\"\n    }\n  ],\n  \"metadata\": {\n    \"enim3e4\": \"<string>\"\n  }\n}"
								}
							]
						},
						{
							"name": "Upload",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{sender_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/octet-stream",
										"type": "text"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "/C:/Windows/winhlp32.exe"
									}
								},
								"url": {
									"raw": "{{baseUrl}}/broker/api/v1/filetransfer/{{fileTransferId}}/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"broker",
										"api",
										"v1",
										"filetransfer",
										"{{fileTransferId}}",
										"upload"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/broker/api/v1/filetransfer/:fileTransferId/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"broker",
												"api",
												"v1",
												"filetransfer",
												":fileTransferId",
												"upload"
											],
											"variable": [
												{
													"key": "fileTransferId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{sender_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/broker/api/v1/filetransfer/{{fileTransferId}}/details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"broker",
										"api",
										"v1",
										"filetransfer",
										"{{fileTransferId}}",
										"details"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/broker/api/v1/filetransfer/:fileTransferId/details",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"broker",
												"api",
												"v1",
												"filetransfer",
												":fileTransferId",
												"details"
											],
											"variable": [
												{
													"key": "fileTransferId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"fileTransferId\": \"<uuid>\",\n  \"FileName\": \"<string>\",\n  \"sendersFileTransferReference\": \"<string>\",\n  \"checksum\": \"<string>\",\n  \"fileTransferStatus\": \"Published\",\n  \"fileTransferStatusText\": \"<string>\",\n  \"fileTransferStatusChanged\": \"<dateTime>\",\n  \"brokerResourceId\": \"<uuid>\",\n  \"sender\": \"<string>\",\n  \"recipients\": [\n    {\n      \"recipient\": \"<string>\",\n      \"recipientFileTransferStatusCode\": \"Cancelled\",\n      \"recipientFileTransferStatusText\": \"<string>\",\n      \"recipientFileTransferStatusChanged\": \"<dateTime>\"\n    },\n    {\n      \"recipient\": \"<string>\",\n      \"recipientFileTransferStatusCode\": \"Downloaded\",\n      \"recipientFileTransferStatusText\": \"<string>\",\n      \"recipientFileTransferStatusChanged\": \"<dateTime>\"\n    }\n  ],\n  \"metadata\": {\n    \"nulla_e\": \"<string>\"\n  },\n  \"fileTransferStatusHistory\": [\n    {\n      \"fileTransferStatus\": \"AllConfirmedDownloaded\",\n      \"fileTransferStatusText\": \"<string>\",\n      \"fileTransferStatusChanged\": \"<dateTime>\"\n    },\n    {\n      \"fileTransferStatus\": \"Downloaded\",\n      \"fileTransferStatusText\": \"<string>\",\n      \"fileTransferStatusChanged\": \"<dateTime>\"\n    }\n  ],\n  \"recipientFileTransferStatusHistory\": [\n    {\n      \"recipient\": \"<string>\",\n      \"recipientFileTransferStatusCode\": \"Initialized\",\n      \"recipientFileTransferStatusText\": \"<string>\",\n      \"recipientFileTransferStatusChanged\": \"<dateTime>\"\n    },\n    {\n      \"recipient\": \"<string>\",\n      \"recipientFileTransferStatusCode\": \"Downloaded\",\n      \"recipientFileTransferStatusText\": \"<string>\",\n      \"recipientFileTransferStatusChanged\": \"<dateTime>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Download",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{recipient_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/broker/api/v1/filetransfer/{{fileTransferId}}/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"broker",
										"api",
										"v1",
										"filetransfer",
										"{{fileTransferId}}",
										"download"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/broker/api/v1/filetransfer/:fileTransferId/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"broker",
												"api",
												"v1",
												"filetransfer",
												":fileTransferId",
												"download"
											],
											"variable": [
												{
													"key": "fileTransferId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "/broker/api/v1/filetransfer/:fileTransferId/download",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/broker/api/v1/filetransfer/{{fileTransferId}}/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"broker",
												"api",
												"v1",
												"filetransfer",
												"{{fileTransferId}}",
												"download"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "raw",
									"header": [
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/octet-stream"
										},
										{
											"key": "Date",
											"value": "Mon, 06 Nov 2023 16:58:12 GMT"
										},
										{
											"key": "Server",
											"value": "Kestrel"
										},
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=document.pdf; filename*=UTF-8''document.pdf"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Confirm Download",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{recipient_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/broker/api/v1/filetransfer/{{fileTransferId}}/confirmdownload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"broker",
										"api",
										"v1",
										"filetransfer",
										"{{fileTransferId}}",
										"confirmdownload"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/broker/api/v1/filetransfer/:fileTransferId/confirmdownload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"broker",
												"api",
												"v1",
												"filetransfer",
												":fileTransferId",
												"confirmdownload"
											],
											"variable": [
												{
													"key": "fileTransferId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Initialize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var fileTransferId = pm.response.json()\r",
									"pm.collectionVariables.set(\"fileTransferId\", fileTransferId.fileTransferId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{sender_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"FileName\": \"system.ini\",\n  \"resourceId\": \"{{resource_id}}\",\n  \"sendersFileTransferReference\": \"archiveno-20425\",\n  \"sender\": \"0192:{{sender_orgnumber}}\",\n  \"recipients\": [\n    \"0192:{{recipient_orgnumber}}\"\n  ],\n  \"propertyList\": {\n    \"caseNumber\": \"123\",\n    \"etc\": \"can-use-for-anything\"\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/broker/api/v1/filetransfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"broker",
								"api",
								"v1",
								"filetransfer"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"FileName\": \"<string>\",\n  \"sendersFileTransferReference\": \"<string>\",\n  \"checksum\": \"<string>\",\n  \"sender\": \"<string>\",\n  \"recipients\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"metadata\": {\n    \"deseruntde\": \"<string>\",\n    \"veniam_1d\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/broker/api/v1/filetransfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"broker",
										"api",
										"v1",
										"filetransfer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "<uuid>"
						}
					]
				},
				{
					"name": "Search",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{recipient_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/broker/api/v1/filetransfer?resourceId={{resource_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"broker",
								"api",
								"v1",
								"filetransfer"
							],
							"query": [
								{
									"key": "resourceId",
									"value": "{{resource_id}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/broker/api/v1/filetransfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"broker",
										"api",
										"v1",
										"filetransfer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
						}
					]
				}
			]
		},
		{
			"name": "Resource",
			"item": [
				{
					"name": "Update Resource",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{serviceowner_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceId\": \"{{resourceId}}\",\r\n    \"maxFileTransferSize\": \"1112391230\",\r\n    \"fileTransferTimeToLive\": \"PT2H\",\r\n    \"PurgeFileTransferAfterAllRecipientsConfirmed\" : false,\r\n    \"purgeFileTransferGracePeriod\": \"PT14H\",\r\n    \"ExternalServiceCodeLegacy\": \"4434\",\r\n    \"ExternalServiceEditionCodeLegacy\": \"2\",\r\n    \"UseManifestFileShim\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/broker/api/v1/resource/{{resource_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"broker",
								"api",
								"v1",
								"resource",
								"{{resource_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Resource",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{serviceowner_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/broker/api/v1/resource/{{resource_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"broker",
								"api",
								"v1",
								"resource",
								"{{resource_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Service Owner",
			"item": [
				{
					"name": "Register Service Owner",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{serviceowner_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"TestServiceOwner\",\r\n    \"deletionTime\": \"P30D\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/broker/api/v1/serviceowner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"broker",
								"api",
								"v1",
								"serviceowner"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Service Owner",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{serviceowner_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/broker/api/v1/serviceowner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"broker",
								"api",
								"v1",
								"serviceowner"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/broker/api/v1/serviceowner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"broker",
										"api",
										"v1",
										"serviceowner"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"Name\": \"string\",\n  \"DeploymentStatus\": \"<int>\",\n  \"FileTransferTimeToLive\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Authenticator",
			"item": [
				{
					"name": "System Register",
					"item": [
						{
							"name": "Register system",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseData = JSON.parse(responseBody);\r",
											"pm.globals.set(\"system_id\", responseData);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{systemprovider_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Id\": \"{{serviceowner_orgnumber}}_brokersystem\",\r\n  \"systemVendorOrgNumber\": \"{{serviceowner_orgnumber}}\",\r\n  \"vendor\": {\r\n    \"authority\" : \"iso6523-actorid-upis\",\r\n    \"ID\": \"0192:{{serviceowner_orgnumber}}\"\r\n  },\r\n  \"name\": {\r\n    \"en\": \"BrokerTestSystem-{{serviceowner_orgnumber}}\",\r\n    \"nb\": \"BrokerTestSystem-{{serviceowner_orgnumber}}\",\r\n    \"nn\": \"BrokerTestSystem-{{serviceowner_orgnumber}}\"\r\n  },\r\n  \"description\": {\r\n    \"en\": \"From Postman-collection\",\r\n    \"nb\": \"Fra Postman-collection\",\r\n    \"nn\": \"Fra Postman-collection\"\r\n  },\r\n  \"rights\": [\r\n    {\r\n      \"resource\": [\r\n        {\r\n          \"value\": \"{{resource_id}}\",\r\n          \"id\": \"urn:altinn:resource\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"allowedRedirectUrls\": [ \"https://smartcloudaltinn.azurewebsites.net/receipt\" ],\r\n  \"clientId\": [ \"{{client_id}}\" ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform.tt02.altinn.no/authentication/api/v1/systemregister/vendor",
									"protocol": "https",
									"host": [
										"platform",
										"tt02",
										"altinn",
										"no"
									],
									"path": [
										"authentication",
										"api",
										"v1",
										"systemregister",
										"vendor"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create sender systemuser request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{systemprovider_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"externalReference\": \"dev-test-create_01\",\r\n  \"systemId\": \"{{serviceowner_orgnumber}}_brokersystem\",\r\n  \"partyOrgNo\": \"{{serviceowner_orgnumber}}\",\r\n  \"rights\": [\r\n    {\r\n      \"Resource\": [\r\n        {\r\n          \"id\": \"urn:altinn:resource\",\r\n          \"value\": \"{{resource_id}}\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"redirectUrl\": \"\"\r\n} \r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform.tt02.altinn.no/authentication/api/v1/systemuser/request/vendor",
									"protocol": "https",
									"host": [
										"platform",
										"tt02",
										"altinn",
										"no"
									],
									"path": [
										"authentication",
										"api",
										"v1",
										"systemuser",
										"request",
										"vendor"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create recipient systemuser request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{systemprovider_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"externalReference\": \"dev-test-create_01\",\r\n  \"systemId\": \"{{serviceowner_orgnumber}}_brokersystem\",\r\n  \"partyOrgNo\": \"{{recipient_orgnumber}}\",\r\n  \"rights\": [\r\n    {\r\n      \"Resource\": [\r\n        {\r\n          \"id\": \"urn:altinn:resource\",\r\n          \"value\": \"{{resource_id}}\"\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"redirectUrl\": \"\"\r\n} \r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://platform.tt02.altinn.no/authentication/api/v1/systemuser/request/vendor",
									"protocol": "https",
									"host": [
										"platform",
										"tt02",
										"altinn",
										"no"
									],
									"path": [
										"authentication",
										"api",
										"v1",
										"systemuser",
										"request",
										"vendor"
									]
								}
							},
							"response": []
						}
					],
					"description": "Registering a system is a one-time thing. After you have created the system you can create systemuser requests. Use the confirmUrl in the response from these and log in using Tenor in the organization that will approve the system user with a user with right privileges (often \"Daglig Leder\" in test)."
				},
				{
					"name": "Install Postman Utility (Initialize)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200)",
									"    pm.globals.set(\"pmlib_code\", responseBody)",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://joolfe.github.io/postman-util-lib/dist/bundle.js",
							"protocol": "https",
							"host": [
								"joolfe",
								"github",
								"io"
							],
							"path": [
								"postman-util-lib",
								"dist",
								"bundle.js"
							]
						},
						"description": "Load the postman-util-lib from github.io and load into postman global variable."
					},
					"response": []
				},
				{
					"name": "Get Systemprovider Maskinporten Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    eval(pm.variables.get(\"pmlib_code\"))\r",
									"    const jwt = pmlib.jwtSign(\r",
									"    jwk = JSON.parse(pm.variables.get(\"client_jwk\")), \r",
									"    payload = {\r",
									"        \"aud\": \"https://test.maskinporten.no/\",\r",
									"        \"scope\": \"altinn:authentication/systemregister.write altinn:serviceowner altinn:authentication/systemuser.request.write altinn:authentication/systemuser.request.read\",\r",
									"        \"iss\": pm.variables.get(\"client_id\")\r",
									"    }, \r",
									"    header = {\r",
									"        \"kid\": pm.variables.get(\"client_kid\")\r",
									"    }, \r",
									"    exp = 120, \r",
									"    alg = 'RS256');\r",
									"pm.variables.set('jwt', jwt);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseData = JSON.parse(responseBody);\r",
									"pm.globals.set(\"systemprovider_maskinporten_token\", responseData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
									"type": "text"
								},
								{
									"key": "assertion",
									"value": "{{jwt}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://test.maskinporten.no/token",
							"protocol": "https",
							"host": [
								"test",
								"maskinporten",
								"no"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Exchange Systemprovider token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"systemprovider_token\", responseBody);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{systemprovider_maskinporten_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.tt02.altinn.no/authentication/api/v1/exchange/maskinporten",
							"protocol": "https",
							"host": [
								"platform",
								"tt02",
								"altinn",
								"no"
							],
							"path": [
								"authentication",
								"api",
								"v1",
								"exchange",
								"maskinporten"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create sender system user Maskinporten token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.variables.get(\"pmlib_code\"));\r",
									"    const jwt = pmlib.jwtSign(\r",
									"    jwk = JSON.parse(pm.variables.get(\"client_jwk\")),\r",
									"    payload = {\r",
									"        \"aud\": \"https://test.maskinporten.no/\",\r",
									"        \"scope\": \"altinn:broker.write\",\r",
									"        \"iss\": pm.variables.get(\"client_id\"),\r",
									"        \"authorization_details\": [\r",
									"            {\r",
									"                \"type\": \"urn:altinn:systemuser\",\r",
									"                \"systemuser_org\":\r",
									"                    {\r",
									"                        \"authority\" : \"iso6523-actorid-upis\",\r",
									"                        \"ID\": pm.variables.get(\"sender_orgnumber\")\r",
									"                    }\r",
									"            }\r",
									"        ],\r",
									"    },\r",
									"    header = {\r",
									"        \"kid\": pm.variables.get(\"client_kid\")\r",
									"    },\r",
									"    exp = 120,\r",
									"    alg = 'RS256');\r",
									"pm.variables.set('jwt', jwt);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseData = JSON.parse(responseBody);\r",
									"pm.globals.set(\"sender_maskinporten_token\", responseData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
									"type": "text"
								},
								{
									"key": "assertion",
									"value": "{{jwt}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://test.maskinporten.no/token",
							"protocol": "https",
							"host": [
								"test",
								"maskinporten",
								"no"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Exchange sender token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"sender_token\", responseBody);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{sender_maskinporten_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.tt02.altinn.no/authentication/api/v1/exchange/maskinporten",
							"protocol": "https",
							"host": [
								"platform",
								"tt02",
								"altinn",
								"no"
							],
							"path": [
								"authentication",
								"api",
								"v1",
								"exchange",
								"maskinporten"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create recipient system user maskinporten token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"eval(pm.variables.get(\"pmlib_code\"));\r",
									"    const jwt = pmlib.jwtSign(\r",
									"    jwk = JSON.parse(pm.variables.get(\"client_jwk\")),\r",
									"    payload = {\r",
									"        \"aud\": \"https://test.maskinporten.no/\",\r",
									"        \"scope\": \"altinn:broker.read\",\r",
									"        \"iss\": pm.variables.get(\"client_id\"),\r",
									"        \"authorization_details\": [\r",
									"            {\r",
									"                \"type\": \"urn:altinn:systemuser\",\r",
									"                \"systemuser_org\":\r",
									"                    {\r",
									"                        \"authority\" : \"iso6523-actorid-upis\",\r",
									"                        \"ID\": pm.variables.get(\"recipient_orgnumber\")\r",
									"                    }\r",
									"            }\r",
									"        ],\r",
									"    },\r",
									"    header = {\r",
									"        \"kid\": pm.variables.get(\"client_kid\")\r",
									"    },\r",
									"    exp = 120,\r",
									"    alg = 'RS256');\r",
									"pm.variables.set('jwt', jwt);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseData = JSON.parse(responseBody);\r",
									"pm.globals.set(\"recipient_maskinporten_token\", responseData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
									"type": "text"
								},
								{
									"key": "assertion",
									"value": "{{jwt}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://test.maskinporten.no/token",
							"protocol": "https",
							"host": [
								"test",
								"maskinporten",
								"no"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Exchange recipient token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"recipient_token\", responseBody);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{recipient_maskinporten_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://platform.tt02.altinn.no/authentication/api/v1/exchange/maskinporten",
							"protocol": "https",
							"host": [
								"platform",
								"tt02",
								"altinn",
								"no"
							],
							"path": [
								"authentication",
								"api",
								"v1",
								"exchange",
								"maskinporten"
							]
						}
					},
					"response": []
				}
			],
			"description": "Create Maskinporten integrations at:\n\n[https://sjolvbetjening.test.samarbeid.digdir.no/](https://sjolvbetjening.test.samarbeid.digdir.no/)\n\nFollow this guide:  \n[https://docs.altinn.studio/correspondence/getting-started/developer-guides/maskinporten/](https://docs.altinn.studio/correspondence/getting-started/developer-guides/maskinporten/)\n\nYou should make a Maskinporten integration for the system owner. This should have the following scopes:\n\nauthentication/systemregister.write altinn:serviceowner altinn:authentication/systemuser.request.write altinn:authentication/systemuser.request.read altinn:broker.write altinn:broker.read\n\nUpdate the postman variables:\n\nclient_id\n\nclient_kid\n\nclient_jwk"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://platform.tt02.altinn.no",
			"type": "string"
		},
		{
			"key": "resource_id",
			"value": "altinn-broker-test-service-resource",
			"type": "string"
		},
		{
			"key": "serviceowner_orgnumber",
			"value": "Organization number of service owner / \"tjeneste-eier\". Nine digits, no prefix.",
			"type": "string"
		},
		{
			"key": "sender_orgnumber",
			"value": "",
			"type": "string"
		},
		{
			"key": "recipient_orgnumber",
			"value": "Organization number of test recipient. Nine digits, no prefix.",
			"type": "string"
		},
		{
			"key": "client_id",
			"value": "Your Maskinporten \"Integrasjons-ID\" (from https://sjolvbetjening.test.samarbeid.digdir.no/login)",
			"type": "string"
		},
		{
			"key": "client_kid",
			"value": "Your Maskinporten client key kid. Can also be found in the JWK.",
			"type": "string"
		},
		{
			"key": "client_jwk",
			"value": "\nInput your Maskinporten JWK here. Should be on the form: \n{\n        \"p\": \"....\",\n        \"kty\": \"RSA\",\n        \"q\": \"....\",\n        \"d\": \"...\",\n        \"e\": \"AQAB\",\n        \"use\": \"sig\",\n        \"kid\": \"client_kid\",\n        \"qi\": \"....\",\n        \"dp\": \"...\",\n        \"alg\": \"RS256\",\n        \"dq\": \"....\",\n        \"n\": \"....\"\n    }",
			"type": "string"
		},
		{
			"key": "local_testing",
			"value": "http://localhost:5096",
			"type": "string",
			"disabled": true
		},
		{
			"key": "fileTransferId",
			"value": "",
			"type": "string"
		},
		{
			"key": "system_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "sender_dagl_ssn",
			"value": "",
			"type": "string"
		}
	]
}